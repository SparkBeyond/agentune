[tool.poetry]
name = "chat_simulator"
version = "0.1.0"
description = "A tool for simulating Customer-Agent conversations based on real chat data"
authors = ["SparkBeyond <info@sparkbeyond.com>"]
readme = "README.md"
packages = [{include = "chat_simulator"}]
license = "MIT"
repository = "https://github.com/SparkBeyond/chat_simulator"
documentation = "https://github.com/SparkBeyond/chat_simulator"


[tool.poetry.dependencies]
python = "3.12.6"
# Add your dependencies here

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
mypy = "^1.15.0"
ruff = "^0.11.11"
pre-commit = "^3.5.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]                         # top-level
target-version = "py312"            # align with project requirements
line-length = 100                   # matches your guideline

[tool.ruff.lint]
# Linter configuration
select = ["E", "F"]  # Only the essentials
ignore = ["E203", "E266", "E501"]  # Relax whitespace & long-line rules

[tool.mypy]
# Type checking configuration
python_version = "3.12"
show_error_codes = true
check_untyped_defs = true
warn_return_any = true
warn_unreachable = true
no_implicit_optional = true
disable_error_code = [
    "truthy-function", "redundant-cast", "var-annotated",
    "override", "import-untyped", "import-not-found"
]

# Cache settings
cache_dir = ".mypy_cache"
incremental = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
